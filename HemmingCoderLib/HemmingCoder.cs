using HemmingCoderLib.Coders;
using HemmingCoderLib.Interfaces;

namespace HemmingCoderLib
{
    public class HemmingCoder
    {

        public static IHemmingCoder CreateCoder(int n, int k)
        {
            switch (n)
            {
                case 6: return new HemmingCoder6_3();
                case 7: return new HemmingCoder7_4();
                case 9: return new HemmingCoder9_5();
                case 11: return new HemmingCoder11_7();
            }
            return null;
        }

        //матрицы для 4 битовой последовательности
        //генерирующая таблица 
        public static int[,] G4 = { {1, 0, 0, 0, 1, 1, 1},
                                    {0, 1, 0, 0, 1, 1, 0},
                                    {0, 0, 1, 0, 1, 0, 1},
                                    {0, 0, 0, 1, 0, 1, 1}};


        //матрицы для 5 битной последовательности
        //генерирующая таблица 
        public static int[,] G5 = { {1, 0, 0, 0, 0, 1, 0, 0, 1},
                                    {0, 1, 0, 0, 0, 0, 1, 1, 1},
                                    {0, 0, 1, 0, 0, 0, 1, 1, 0},
                                    {0, 0, 0, 1, 0, 0, 1, 0, 1},
                                    {0, 0, 0, 0, 1, 0, 0, 1, 1}};


        //матрицы для 6 битной последовательности
        //генерирующая таблица 
        public static int[,] G6 = { {1, 0, 0, 0, 0, 0, 1, 0, 1, 0},
                                    {0, 1, 0, 0, 0, 0, 1, 0, 0, 1},
                                    {0, 0, 1, 0, 0, 0, 0, 1, 1, 1},
                                    {0, 0, 0, 1, 0, 0, 0, 1, 1, 0},
                                    {0, 0, 0, 0, 1, 0, 0, 1, 0, 1},
                                    {0, 0, 0, 0, 0, 1, 0, 0, 1, 1}};

        //матрицы для 7 битной последовательности
        //генерирующая таблица 
        public static int[,] G7 = { {1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1},
                                    {0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0},
                                    {0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1},
                                    {0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1},
                                    {0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0},
                                    {0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1},
                                    {0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1}};

        //матрицы для 8 битной последовательности
        //генерирующая таблица 
        public static int[,] G8 = { {1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0},
                                    {0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1},
                                    {0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0},
                                    {0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1},
                                    {0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1},
                                    {0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0},
                                    {0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1},
                                    {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1}};
        //матрицы для 9 битной последовательности
        //генерирующая таблица 
        public static int[,] G9 = { {1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1},
                                    {0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0},
                                    {0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1},
                                    {0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0},
                                    {0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1},
                                    {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1},
                                    {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0},
                                    {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1},
                                    {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1}};

        //матрицы для 10 битной последовательности
        //генерирующая таблица 
        public static int[,] G0 = { {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0},
                                    {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1},
                                    {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0},
                                    {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1},
                                    {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0},
                                    {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1},
                                    {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1},
                                    {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0},
                                    {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1},
                                    {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1}};
    }

}